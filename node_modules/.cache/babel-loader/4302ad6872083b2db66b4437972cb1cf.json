{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Documents/trialworks/test-folder/word-game-jest-enzyme/src/Components/GuessedWords.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction GuessedWords(props) {\n  let contents;\n\n  if (props.guessedWords.length === 0) {\n    contents = React.createElement(\"span\", {\n      \"data-test\": \"guess-instructions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, \"Try to guess the secret word!\");\n  } else {\n    const guessedWordsRows = props.guessedWords.map((eachWord, index) => React.createElement(\"tr\", {\n      key: index,\n      \"data-test\": \"guessed-word\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, eachWord.guessedWord), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, eachWord.letterMatchCount)));\n    contents = React.createElement(\"div\", {\n      \"data-test\": \"guessed-words\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Guessed Words\"), React.createElement(\"table\", {\n      className: \"table table-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Guess\"), \"Matching Letters\")), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, guessedWordsRows)));\n  }\n\n  return React.createElement(\"div\", {\n    \"data-test\": \"component-guessed-words\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, contents);\n}\n\nGuessedWords.propTypes = {\n  guessedWords: PropTypes.arrayOf(PropTypes.shape({\n    guessedWord: PropTypes.string.isRequired,\n    letterMatchCount: PropTypes.number.isRequired\n  })).isRequired\n};\nexport default GuessedWords;","map":{"version":3,"sources":["/Users/ryan/Documents/trialworks/test-folder/word-game-jest-enzyme/src/Components/GuessedWords.jsx"],"names":["React","PropTypes","GuessedWords","props","contents","guessedWords","length","guessedWordsRows","map","eachWord","index","guessedWord","letterMatchCount","propTypes","arrayOf","shape","string","isRequired","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC5B,MAAIC,QAAJ;;AACA,MAAID,KAAK,CAACE,YAAN,CAAmBC,MAAnB,KAA8B,CAAlC,EAAqC;AACpCF,IAAAA,QAAQ,GACP;AAAM,mBAAU,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADD;AAGA,GAJD,MAIO;AACN,UAAMG,gBAAgB,GAAGJ,KAAK,CAACE,YAAN,CAAmBG,GAAnB,CAAuB,CAACC,QAAD,EAAWC,KAAX,KAC/C;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAgB,mBAAU,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,QAAQ,CAACE,WAAd,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,QAAQ,CAACG,gBAAd,CAFD,CADwB,CAAzB;AAMAR,IAAAA,QAAQ,GACP;AAAK,mBAAU,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADD,EAEC;AAAO,MAAA,SAAS,EAAC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAO,MAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,qBADD,CADD,EAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQG,gBAAR,CAND,CAFD,CADD;AAaA;;AACD,SAAO;AAAK,iBAAU,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CH,QAA1C,CAAP;AACA;;AAEDF,YAAY,CAACW,SAAb,GAAyB;AACxBR,EAAAA,YAAY,EAAEJ,SAAS,CAACa,OAAV,CACbb,SAAS,CAACc,KAAV,CAAgB;AACfJ,IAAAA,WAAW,EAAEV,SAAS,CAACe,MAAV,CAAiBC,UADf;AAEfL,IAAAA,gBAAgB,EAAEX,SAAS,CAACiB,MAAV,CAAiBD;AAFpB,GAAhB,CADa,EAKZA;AANsB,CAAzB;AASA,eAAef,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction GuessedWords(props) {\n\tlet contents;\n\tif (props.guessedWords.length === 0) {\n\t\tcontents = (\n\t\t\t<span data-test='guess-instructions'>Try to guess the secret word!</span>\n\t\t);\n\t} else {\n\t\tconst guessedWordsRows = props.guessedWords.map((eachWord, index) => (\n\t\t\t<tr key={index} data-test='guessed-word'>\n\t\t\t\t<td>{eachWord.guessedWord}</td>\n\t\t\t\t<td>{eachWord.letterMatchCount}</td>\n\t\t\t</tr>\n\t\t));\n\t\tcontents = (\n\t\t\t<div data-test='guessed-words'>\n\t\t\t\t<h3>Guessed Words</h3>\n\t\t\t\t<table className='table table-sm'>\n\t\t\t\t\t<thead className='thead-light'>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Guess</th>Matching Letters\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>{guessedWordsRows}</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t);\n\t}\n\treturn <div data-test='component-guessed-words'>{contents}</div>;\n}\n\nGuessedWords.propTypes = {\n\tguessedWords: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tguessedWord: PropTypes.string.isRequired,\n\t\t\tletterMatchCount: PropTypes.number.isRequired\n\t\t})\n\t).isRequired\n};\n\nexport default GuessedWords;\n"]},"metadata":{},"sourceType":"module"}